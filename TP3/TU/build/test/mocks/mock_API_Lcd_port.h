/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_API_LCD_PORT_H
#define _MOCK_API_LCD_PORT_H

#include "unity.h"
#include "API_Lcd_port.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_API_Lcd_port_Init(void);
void mock_API_Lcd_port_Destroy(void);
void mock_API_Lcd_port_Verify(void);




#define LCD_HW_init_IgnoreAndReturn(cmock_retval) LCD_HW_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LCD_HW_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define LCD_HW_init_StopIgnore() LCD_HW_init_CMockStopIgnore()
void LCD_HW_init_CMockStopIgnore(void);
#define LCD_HW_init_ExpectAndReturn(cmock_retval) LCD_HW_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void LCD_HW_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
typedef _Bool (* CMOCK_LCD_HW_init_CALLBACK)(int cmock_num_calls);
void LCD_HW_init_AddCallback(CMOCK_LCD_HW_init_CALLBACK Callback);
void LCD_HW_init_Stub(CMOCK_LCD_HW_init_CALLBACK Callback);
#define LCD_HW_init_StubWithCallback LCD_HW_init_Stub
#define LCD_Write_Byte_Ignore() LCD_Write_Byte_CMockIgnore()
void LCD_Write_Byte_CMockIgnore(void);
#define LCD_Write_Byte_StopIgnore() LCD_Write_Byte_CMockStopIgnore()
void LCD_Write_Byte_CMockStopIgnore(void);
#define LCD_Write_Byte_Expect(valor) LCD_Write_Byte_CMockExpect(__LINE__, valor)
void LCD_Write_Byte_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t valor);
typedef void (* CMOCK_LCD_Write_Byte_CALLBACK)(uint8_t valor, int cmock_num_calls);
void LCD_Write_Byte_AddCallback(CMOCK_LCD_Write_Byte_CALLBACK Callback);
void LCD_Write_Byte_Stub(CMOCK_LCD_Write_Byte_CALLBACK Callback);
#define LCD_Write_Byte_StubWithCallback LCD_Write_Byte_Stub
#define HAL_Delay_Ignore() HAL_Delay_CMockIgnore()
void HAL_Delay_CMockIgnore(void);
#define HAL_Delay_StopIgnore() HAL_Delay_CMockStopIgnore()
void HAL_Delay_CMockStopIgnore(void);
#define HAL_Delay_Expect(Delay) HAL_Delay_CMockExpect(__LINE__, Delay)
void HAL_Delay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Delay);
typedef void (* CMOCK_HAL_Delay_CALLBACK)(uint32_t Delay, int cmock_num_calls);
void HAL_Delay_AddCallback(CMOCK_HAL_Delay_CALLBACK Callback);
void HAL_Delay_Stub(CMOCK_HAL_Delay_CALLBACK Callback);
#define HAL_Delay_StubWithCallback HAL_Delay_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
